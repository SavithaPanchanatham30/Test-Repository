<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <decisions>
        <name>If_Configuration_Exists</name>
        <label>If Configuration Exists</label>
        <locationX>182</locationX>
        <locationY>1019</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>True_If_Configuration_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Dental_Partner_State_Configuration</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Business_Partner_Account</targetReference>
            </connector>
            <label>True_If Configuration Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Contact_Exists</name>
        <label>Is Contact Exists</label>
        <locationX>182</locationX>
        <locationY>611</locationY>
        <defaultConnector>
            <targetReference>Get_Dental_Partner_State_Configuration</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Doesn&#39;t Exists</defaultConnectorLabel>
        <rules>
            <name>Contact_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Contact</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Contact</targetReference>
            </connector>
            <label>Contact Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>When_RecordType_is_Dental_Operations</name>
        <label>When RecordType is Dental Operations</label>
        <locationX>380</locationX>
        <locationY>395</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Dental_Operations</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Contact</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>CaseEmailDomain</name>
        <dataType>String</dataType>
        <expression>RIGHT({!$Record.SuppliedEmail}, LEN({!$Record.SuppliedEmail}) - FIND(&quot;@&quot;,{!$Record.SuppliedEmail}) + 1)</expression>
    </formulas>
    <interviewLabel>Case: Update {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case: Update Partner State For Dental Operation</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Business_Partner_Account</name>
        <label>Get Business Partner Account</label>
        <locationX>50</locationX>
        <locationY>1127</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Partner_State_On_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Dental_Partner_State_Configuration.Business_Partner__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Partner</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Contact</name>
        <label>Get Contact</label>
        <locationX>182</locationX>
        <locationY>503</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Contact_Exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SuppliedEmail</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Dental_Partner_State_Configuration</name>
        <label>Get Dental Partner State Configuration</label>
        <locationX>182</locationX>
        <locationY>911</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>If_Configuration_Exists</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Label</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SuppliedEmail</elementReference>
            </value>
        </filters>
        <filters>
            <field>Label</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CaseEmailDomain</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Dental_Partner_State_Configuration__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_RecordType</name>
        <label>Get RecordType</label>
        <locationX>380</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>When_RecordType_is_Dental_Operations</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RecordTypeId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Contact</name>
        <label>Update Contact</label>
        <locationX>50</locationX>
        <locationY>719</locationY>
        <connector>
            <targetReference>Get_Dental_Partner_State_Configuration</targetReference>
        </connector>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>Get_Contact.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Partner_State_On_Case</name>
        <label>Update Partner State On Case</label>
        <locationX>50</locationX>
        <locationY>1235</locationY>
        <inputAssignments>
            <field>Business_Partner__c</field>
            <value>
                <elementReference>Get_Business_Partner_Account.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Partner_State__c</field>
            <value>
                <elementReference>Get_Dental_Partner_State_Configuration.Partner_State__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_RecordType</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>CaseSourceEmailAddress</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Record.Source:EmailMessage.FromAddress</elementReference>
        </value>
    </variables>
    <variables>
        <name>ContactID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>Get_Contact.Id</elementReference>
        </value>
    </variables>
    <variables>
        <name>SetContactFieldonCase</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
