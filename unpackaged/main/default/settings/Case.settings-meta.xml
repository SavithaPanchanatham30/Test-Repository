<?xml version="1.0" encoding="UTF-8"?>
<CaseSettings xmlns="http://soap.sforce.com/2006/04/metadata">
    <caseAutoProcUser>true</caseAutoProcUser>
    <caseFeedItemSettings>
        <characterLimit>400</characterLimit>
        <displayFormat>Default</displayFormat>
        <feedItemType>EmailMessageEvent</feedItemType>
    </caseFeedItemSettings>
    <caseFeedReadUnreadLtng>true</caseFeedReadUnreadLtng>
    <caseMergeInLightning>false</caseMergeInLightning>
    <closeCaseThroughStatusChange>true</closeCaseThroughStatusChange>
    <defaultCaseFeedLayoutOn>false</defaultCaseFeedLayoutOn>
    <defaultCaseOwner>salesforceadmin@usablelife.com</defaultCaseOwner>
    <defaultCaseOwnerType>User</defaultCaseOwnerType>
    <defaultCaseUser>salesforceadmin@usablelife.com</defaultCaseUser>
    <emailToCase>
        <enableE2CAttachmentAsFile>true</enableE2CAttachmentAsFile>
        <enableE2CDeduplicateAttachments>false</enableE2CDeduplicateAttachments>
        <enableE2CExternalServer>false</enableE2CExternalServer>
        <enableE2CSourceTracking>true</enableE2CSourceTracking>
        <enableEmailToCase>true</enableEmailToCase>
        <enableHtmlEmail>true</enableHtmlEmail>
        <enableNewToReadTriggers>false</enableNewToReadTriggers>
        <enableOnDemandEmailToCase>true</enableOnDemandEmailToCase>
        <enableThreadIDInBody>true</enableThreadIDInBody>
        <enableThreadIDInSubject>true</enableThreadIDInSubject>
        <notifyOwnerOnNewCaseEmail>false</notifyOwnerOnNewCaseEmail>
        <overEmailLimitAction>Bounce</overEmailLimitAction>
        <preQuoteSignature>true</preQuoteSignature>
        <replyWithNewContentOnly>false</replyWithNewContentOnly>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>accessableplus@lsvusa.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>accessableplus@lsvusa.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>AccessAblePlus</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>amendments@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>amendments@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Amendments</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>bluefit@usablelife.com</caseOrigin>
            <caseOwner>Service_Intake</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>bluefit@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>BlueFIT</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>compasslifeprosupport@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>compasslifeprosupport@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Business Systems</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>claims@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>claims@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Claims</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>claimsdepartmentfax@fax.lsvusa.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>claimsdepartmentfax@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Claims Department Fax</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>commissioninquiries@usablelife.com</caseOrigin>
            <caseOwner>Commission_Inquiries</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>commissioninquiries@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Commission Inquiries</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>commissions@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>commissions@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Commissions</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>servicesolutions@usablelife.com</caseOrigin>
            <caseOwner>Partner_Service</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Medium</casePriority>
            <createTask>true</createTask>
            <emailAddress>servicesolutions@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Concierge</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>custserve@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>custserve@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Customer Service</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>dentalwebsupport@usablelife.com</caseOrigin>
            <caseOwner>Dental_Web_Support</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>dentalwebsupport@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Dental Web Support</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>disabilityclaims@fax.lsvusa.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>disabilityclaims@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Disability</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>edirequest@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>edirequest@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>EDI Request</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>eutf.claims@usablelife.com</caseOrigin>
            <casePriority>High</casePriority>
            <createTask>true</createTask>
            <emailAddress>eutf.claims@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>EUTF Claims</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>eutf.custserv@usablelife.com</caseOrigin>
            <casePriority>High</casePriority>
            <createTask>true</createTask>
            <emailAddress>eutf.custserv@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>EUTF Customer Service</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>enrollmentservices@lsvusa.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>enrollmentservices@lsvusa.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Enrollment Services</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>fclindlife@fclife.com</caseOrigin>
            <caseOwner>M_B_Florida</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>fclindlife@fclife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>FCL  Indlife</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Not Started</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>fclschedulearequest@fclife.com</caseOrigin>
            <caseOwner>SBMA_FCL_Schedule_A</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>fclschedulearequest@fclife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Florida Schedule A Request</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>groupsetup@fclife.com</caseOrigin>
            <caseOwner>M_B_Florida_GroupSetup</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>groupsetup@fclife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Group Setup FCLIFE</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Completed</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>gubusinesssubmissionspnw@usablelife.com</caseOrigin>
            <caseOwner>Group_Underwriting_PNW</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>gubusinesssubmissionspnw@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Group Underwriting PNW</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>Group Underwriting</caseOrigin>
            <caseOwner>Group_Underwriting</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>gubusinesssubmissions@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Group Underwriting Submissions</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>HawaiiClaims@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>hawaiiclaims@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Hawaii Claims</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>LSV_Support</caseOrigin>
            <caseOwner>Dental_LSV</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>lsvcssupport@lsvusa.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>LSVCS Support</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>licensing@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>licensing@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Licensing</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>lifeanddisabilityclaims@fax.lsvusa.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>lifeanddisability@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Life &amp; Disability Claims</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>lifeandhealthclaims@fax.lsvusa.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>lifeandhealthclaims@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Life &amp; Health Claims</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>LifeMapBilling@usablelife.com</caseOrigin>
            <caseOwner>LM_Enrollment</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>lifemapbilling@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>LifeMap Billing</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>LifeMapConcierge1@usablelife.com</caseOrigin>
            <caseOwner>LM_Enrollment</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>lifemapconcierge1@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>LifeMap Concierge1</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>LifeMapConcierge2@usablelife.com</caseOrigin>
            <caseOwner>LM_Enrollment</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>lifemapconcierge2@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>LifeMap Concierge2</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>LifeMapConcierge3@usablelife.com</caseOrigin>
            <caseOwner>LM_Enrollment</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>lifemapconcierge3@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>LifeMap Concierge3</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>LifeMapConcierge4@usablelife.com</caseOrigin>
            <caseOwner>LMCambia_Enrollment</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>lifemapconcierge4@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>LifeMap Concierge4</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>LifeMapPort_Convert@usablelife.com</caseOrigin>
            <caseOwner>LM_Enrollment</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>lifemapport_convert@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>LifeMap Port Convert</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>medicalunderwriting@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>medicalunderwriting@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Medical Underwriting</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>membership@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>membership@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Member Services</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>membershipandbilling@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>membershipandbilling@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Membership &amp; Billing</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>newbusiness@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>newbusiness@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>New Business</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>UsableOps_Support</caseOrigin>
            <caseOwner>Dental_OpsdpmSolutions</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>opsdpmsolutionsmb@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Ops DPM Solutions MB</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>phs@fclife.com</caseOrigin>
            <caseOwner>Partner_Service</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>phs@fclife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>PHS FCLIFE</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Completed</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>partnerservice@usablelife.com</caseOrigin>
            <caseOwner>Partner_Service</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>partnerservice@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Partner Service</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>premacctmaint@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>premacctmaint@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Premium Accounting</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>accountingdepartmentfax@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>accountingdepartmentfax@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Premium Accounting</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>premiumaccountingach@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>premiumaccountingach@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Premium Accounting</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>premacctg@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>premacctg@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Premium Accounting</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>producerservicesreporting@usablelife.com</caseOrigin>
            <caseOwner>Producer_Services_Reporting</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>producerservicesreporting@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Producer Services Reporting</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>Recon01@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>recon01@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Reconciliation</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>Regence_Support</caseOrigin>
            <caseOwner>Dental_Regence</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>regencedentalsupport@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Regence Dental Support</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>salesbusinessresponse@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>salesbusinessresponse@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>SBMA Campaigns</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>schedulearequest@usablelife.com</caseOrigin>
            <caseOwner>SBMA_Schedule_A</caseOwner>
            <caseOwnerType>Queue</caseOwnerType>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>schedulearequest@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Schedule A Request</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>tdi_claims_fax@fax.lsvusa.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>tdi_claims_fax@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>TDI Claims</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>Email</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>test22222@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>false</isVerified>
            <routingName>Test2</routingName>
            <saveEmailHeaders>true</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <routingAddresses>
            <addressType>EmailToCase</addressType>
            <caseOrigin>websupport@usablelife.com</caseOrigin>
            <casePriority>Normal</casePriority>
            <createTask>true</createTask>
            <emailAddress>websupport@usablelife.com</emailAddress>
            <isPermsetControlled>false</isPermsetControlled>
            <isVerified>true</isVerified>
            <routingName>Web Support</routingName>
            <saveEmailHeaders>false</saveEmailHeaders>
            <taskStatus>Received</taskStatus>
        </routingAddresses>
        <unauthorizedSenderAction>Bounce</unauthorizedSenderAction>
    </emailToCase>
    <enableCaseFeed>true</enableCaseFeed>
    <enableCaseSwarming>false</enableCaseSwarming>
    <enableCollapseEmailThread>false</enableCollapseEmailThread>
    <enableDraftEmails>true</enableDraftEmails>
    <enableEarlyEscalationRuleTriggers>false</enableEarlyEscalationRuleTriggers>
    <enableEmailActionDefaultsHandler>false</enableEmailActionDefaultsHandler>
    <enableEscalateQfiToCaseInternal>false</enableEscalateQfiToCaseInternal>
    <enableEscalateQfiToCaseNetworks>false</enableEscalateQfiToCaseNetworks>
    <enableExtNetworksCaseFeedEnabled>false</enableExtNetworksCaseFeedEnabled>
    <enableMultiLangSolnSrchCSS>false</enableMultiLangSolnSrchCSS>
    <enableMultiLangSolnSrchPKB>false</enableMultiLangSolnSrchPKB>
    <enableMultiLangSolution>false</enableMultiLangSolution>
    <enableSolutionCategory>false</enableSolutionCategory>
    <enableSolutionInlineCategory>true</enableSolutionInlineCategory>
    <enableSolutionShortSummary>true</enableSolutionShortSummary>
    <enableSuggestedArticlesApplication>false</enableSuggestedArticlesApplication>
    <enableSuggestedArticlesCustomerPortal>false</enableSuggestedArticlesCustomerPortal>
    <enableSuggestedArticlesPartnerPortal>false</enableSuggestedArticlesPartnerPortal>
    <enableSuggestedSolutions>false</enableSuggestedSolutions>
    <escalateCaseBefore>false</escalateCaseBefore>
    <keepRecordTypeOnAssignmentRule>true</keepRecordTypeOnAssignmentRule>
    <notifyContactOnCaseComment>false</notifyContactOnCaseComment>
    <notifyDefaultCaseOwner>false</notifyDefaultCaseOwner>
    <notifyOwnerOnCaseComment>false</notifyOwnerOnCaseComment>
    <notifyOwnerOnCaseOwnerChange>false</notifyOwnerOnCaseOwnerChange>
    <showEmailAttachmentsInCaseAttachmentsRL>true</showEmailAttachmentsInCaseAttachmentsRL>
    <showFewerCloseActions>false</showFewerCloseActions>
    <systemUserEmail>automatedcase@00di0000000foeneaa.ext</systemUserEmail>
    <useSystemEmailAddress>true</useSystemEmailAddress>
    <useSystemUserAsDefaultCaseUser>false</useSystemUserAsDefaultCaseUser>
    <visibleInCssCheckbox>false</visibleInCssCheckbox>
    <webToCase>
        <enableWebToCase>false</enableWebToCase>
    </webToCase>
</CaseSettings>
